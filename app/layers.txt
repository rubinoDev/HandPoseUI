workers -> processo em segundo plano
    -> toda logica PESADA (que envolva cpu)
    -> tudo que pode travar a tela (for loop, machine learning, processamento da webcam)
    -> ele chama as regras de negócio da service

services ->
    -> toda lógica de negócio
    -> toda chamada externa (API, arquivos, banco de dados )

views ->
    -> toda iteração com o DOM (com o HTML)

controllers -> 
    -> é a intermediária entre (services e/ou workers) e views

factories ->
    -> a factory é quem importa as dependencias
    -> e cria o objeto final para fazermos as chamadas
    -> retorna a função que inicializa o fluxo daquele componente (init)

index.js -> é responsavel por chamar todas as chamadas